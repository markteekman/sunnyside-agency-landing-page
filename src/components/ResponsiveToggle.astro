<button class="responsive-toggle" aria-expanded="false" aria-label="Open menu navigation">
  <svg width="24" height="18" viewBox="0 0 24 18" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M24 16V18H0V16H24ZM24 8V10H0V8H24ZM24 0V2H0V0H24Z" fill="#212E3C"/></svg>
</button>

<script>
  // variables
  const responsiveToggle = document.querySelector('.responsive-toggle')

  // functions
  const openMenu = (toggle) => {
    toggle.setAttribute('aria-expanded', true)
    toggle.setAttribute('aria-label', 'Close menu navigation')
    toggle.innerHTML = 'Close'
  }

  const closeMenu = (toggle) => {
    toggle.setAttribute('aria-expanded', false)
    toggle.setAttribute('aria-label', 'Open menu navigation')
    toggle.innerHTML = '<svg width="24" height="18" viewBox="0 0 24 18" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M24 16V18H0V16H24ZM24 8V10H0V8H24ZM24 0V2H0V0H24Z" fill="#212E3C"/></svg>'
  }

  // execution
  responsiveToggle.addEventListener('click', _ => {
    const mainNavigation = document.querySelector('#main-navigation')

    mainNavigation.classList.toggle('show')
    mainNavigation.classList.contains('show')
      ? openMenu(responsiveToggle)
      : closeMenu(responsiveToggle)
  })

  // check if responsive menu is open when resized and then remove
  window.addEventListener('resize', _ =>{
    const mainNavigation = document.querySelector('#main-navigation')

    if (mainNavigation.classList.contains('show') && window.matchMedia("(min-width: 768px)").matches) {
      mainNavigation.classList.remove('show')
      closeMenu(responsiveToggle)
    }
  })
</script>

<style lang="scss">
  @use "../styles/base/breakpoint" as *;
  @use "../styles/base/outline" as *;

  .responsive-toggle {
    border: none;
    padding-right: 0;
    color: var(--neutral-clr-dark-blue);

    @include breakpoint(medium) {
      display: none;
    }
  }
</style>
